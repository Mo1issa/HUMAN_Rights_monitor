{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api/v1',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for adding auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for handling errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle 401 Unauthorized errors (token expired)\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  getCurrentUser: () => api.get('/auth/me')\n};\n\n// Cases API\nexport const casesAPI = {\n  getAllCases: params => api.get('/cases', {\n    params\n  }),\n  getCaseById: id => api.get(`/cases/${id}`),\n  createCase: caseData => api.post('/cases', caseData),\n  updateCase: (id, caseData) => api.put(`/cases/${id}`, caseData),\n  deleteCase: id => api.delete(`/cases/${id}`),\n  uploadEvidence: (caseId, formData) => api.post(`/cases/${caseId}/evidence`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Reports API\nexport const reportsAPI = {\n  getAllReports: params => api.get('/reports', {\n    params\n  }),\n  getReportById: id => api.get(`/reports/${id}`),\n  createReport: reportData => api.post('/reports', reportData),\n  updateReport: (id, reportData) => api.put(`/reports/${id}`, reportData),\n  deleteReport: id => api.delete(`/reports/${id}`),\n  uploadEvidence: (reportId, formData) => api.post(`/reports/${reportId}/evidence`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Victims API\nexport const victimsAPI = {\n  getAllVictims: params => api.get('/victims', {\n    params\n  }),\n  getVictimById: id => api.get(`/victims/${id}`),\n  createVictim: victimData => api.post('/victims', victimData),\n  updateVictim: (id, victimData) => api.put(`/victims/${id}`, victimData),\n  deleteVictim: id => api.delete(`/victims/${id}`)\n};\n\n// Analytics API\nexport const analyticsAPI = {\n  getViolationStats: params => api.get('/analytics/violations', {\n    params\n  }),\n  getTimelineData: params => api.get('/analytics/timeline', {\n    params\n  }),\n  getGeoData: params => api.get('/analytics/geo', {\n    params\n  }),\n  exportData: (format, params) => api.get(`/analytics/export/${format}`, {\n    params,\n    responseType: 'blob'\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","getCurrentUser","get","casesAPI","getAllCases","params","getCaseById","id","createCase","caseData","updateCase","put","deleteCase","delete","uploadEvidence","caseId","formData","reportsAPI","getAllReports","getReportById","createReport","reportData","updateReport","deleteReport","reportId","victimsAPI","getAllVictims","getVictimById","createVictim","victimData","updateVictim","deleteVictim","analyticsAPI","getViolationStats","getTimelineData","getGeoData","exportData","format","responseType"],"sources":["C:/Users/HP/Downloads/human_rights_monitor_vscode/human_rights_monitor_vscode/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api/v1',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for adding auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for handling errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Handle 401 Unauthorized errors (token expired)\n    if (error.response && error.response.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  getCurrentUser: () => api.get('/auth/me')\n};\n\n// Cases API\nexport const casesAPI = {\n  getAllCases: (params) => api.get('/cases', { params }),\n  getCaseById: (id) => api.get(`/cases/${id}`),\n  createCase: (caseData) => api.post('/cases', caseData),\n  updateCase: (id, caseData) => api.put(`/cases/${id}`, caseData),\n  deleteCase: (id) => api.delete(`/cases/${id}`),\n  uploadEvidence: (caseId, formData) => api.post(`/cases/${caseId}/evidence`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Reports API\nexport const reportsAPI = {\n  getAllReports: (params) => api.get('/reports', { params }),\n  getReportById: (id) => api.get(`/reports/${id}`),\n  createReport: (reportData) => api.post('/reports', reportData),\n  updateReport: (id, reportData) => api.put(`/reports/${id}`, reportData),\n  deleteReport: (id) => api.delete(`/reports/${id}`),\n  uploadEvidence: (reportId, formData) => api.post(`/reports/${reportId}/evidence`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Victims API\nexport const victimsAPI = {\n  getAllVictims: (params) => api.get('/victims', { params }),\n  getVictimById: (id) => api.get(`/victims/${id}`),\n  createVictim: (victimData) => api.post('/victims', victimData),\n  updateVictim: (id, victimData) => api.put(`/victims/${id}`, victimData),\n  deleteVictim: (id) => api.delete(`/victims/${id}`)\n};\n\n// Analytics API\nexport const analyticsAPI = {\n  getViolationStats: (params) => api.get('/analytics/violations', { params }),\n  getTimelineData: (params) => api.get('/analytics/timeline', { params }),\n  getGeoData: (params) => api.get('/analytics/geo', { params }),\n  exportData: (format, params) => api.get(`/analytics/export/${format}`, { \n    params,\n    responseType: 'blob'\n  })\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}